{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../components/header\";\nimport { Button } from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport * as actions from \"../../../redux/Actions/cartActions\";\nimport CartItem from \"./CartItem\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Cart = function Cart(props) {\n  var dispatch = useDispatch();\n  var cartItems = useSelector(function (_ref) {\n    var cartItems = _ref.cartItems;\n    return cartItems;\n  });\n  var totalPrice = 0;\n  cartItems.forEach(function (_ref2) {\n    var product = _ref2.product;\n    totalPrice += product.price;\n  });\n\n  var clearCart = function clearCart() {\n    dispatch(actions.clearCart());\n  };\n\n  var removeFromCart = function removeFromCart(item) {\n    dispatch(actions.removeFromCart(item));\n  };\n\n  return _jsxs(View, {\n    style: {\n      position: 'relative',\n      height: '100%'\n    },\n    children: [_jsx(Header, {}), cartItems.length > 0 ? _jsxs(_Fragment, {\n      children: [_jsx(SwipeListView, {\n        data: cartItems,\n        renderItem: function renderItem(data) {\n          return _jsx(CartItem, {\n            data: data\n          });\n        },\n        renderHiddenItem: function renderHiddenItem(data) {\n          return _jsx(View, {\n            style: styles.hiddenContainer,\n            children: _jsx(TouchableOpacity, {\n              style: styles.hiddenButton,\n              onPress: function onPress() {\n                return removeFromCart(data.item);\n              },\n              children: _jsx(Icon, {\n                name: \"trash\",\n                color: \"white\",\n                size: 30\n              })\n            })\n          });\n        },\n        disableRightSwipe: true,\n        previewOpenDelay: 3000,\n        friction: 1000,\n        tension: 40,\n        leftOpenValue: 75,\n        stopLeftSwipe: 75,\n        rightOpenValue: -75\n      }), _jsxs(View, {\n        style: styles.bottomContainer,\n        children: [_jsx(View, {\n          children: _jsxs(Text, {\n            children: [\"$ \", totalPrice.toFixed(2)]\n          })\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(Button, {\n            danger: true,\n            medium: true,\n            onPress: clearCart,\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Clear\"\n            })\n          }), _jsx(Button, {\n            primary: true,\n            medium: true,\n            style: {\n              marginLeft: 10\n            },\n            onPress: function onPress() {\n              return props.navigation.navigate('Checkout');\n            },\n            children: _jsx(Text, {\n              style: {\n                color: 'white'\n              },\n              children: \"Checkout\"\n            })\n          })]\n        })]\n      })]\n    }) : _jsxs(View, {\n      style: styles.center,\n      children: [_jsx(Text, {\n        style: styles.description,\n        children: \"Looks like your cart is empty\"\n      }), _jsx(Text, {\n        style: styles.description,\n        children: \"Add products to your cart to get started\"\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    padding: 10,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\"\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 81,\n    width: width / 1.2\n  }\n});\nexport default Cart;","map":{"version":3,"names":["React","connect","useDispatch","useSelector","Header","Button","SwipeListView","actions","CartItem","Icon","Dimensions","get","height","width","Cart","props","dispatch","cartItems","totalPrice","forEach","product","price","clearCart","removeFromCart","item","position","length","data","styles","hiddenContainer","hiddenButton","bottomContainer","toFixed","flexDirection","color","marginLeft","navigation","navigate","center","description","StyleSheet","create","flex","alignItems","justifyContent","button","backgroundColor","alignSelf","paddingHorizontal","paddingVertical","borderRadius","buttonText","fontWeight","textTransform","fontSize","bottom","left","padding","paddingRight"],"sources":["/Users/user/Documents/fullstack-mobile/client/app/screens/Cart/Cart.js"],"sourcesContent":["import React from \"react\";\nimport { View, StyleSheet, Text, ScrollView, TouchableOpacity, Image, Dimensions } from \"react-native\";\nimport { connect, useDispatch, useSelector } from \"react-redux\";\nimport Header from \"../../components/header\";\nimport  {Button} from 'native-base'\nimport { SwipeListView } from 'react-native-swipe-list-view'\n\nimport * as actions from '../../../redux/Actions/cartActions';\nimport CartItem from \"./CartItem\";\n\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n\nvar { height, width } = Dimensions.get(\"window\");\nconst Cart = (props) => {\n  const dispatch = useDispatch()\n\n  const cartItems = useSelector(({ cartItems }) => cartItems);\n\n  var totalPrice = 0;\n\n  cartItems.forEach(({product}) => {\n    totalPrice += product.price\n  })\n\n  const clearCart = () => {\n    dispatch(actions.clearCart())\n  }\n\n  const removeFromCart = (item) => {\n    dispatch(actions.removeFromCart(item))\n  }\n\n\n  \n  return (\n    <View style={{position: 'relative', height: '100%'}}>\n      <Header />\n      \n      {cartItems.length > 0 ? (\n        <>\n          <SwipeListView data={cartItems} \n          renderItem={(data) => <CartItem data={data} /> } \n          renderHiddenItem={(data) => (\n              <View style={styles.hiddenContainer}>\n                <TouchableOpacity \n                style={styles.hiddenButton}\n                onPress={() => removeFromCart(data.item)}\n                >\n                  <Icon name=\"trash\" color={\"white\"} size={30} />\n                </TouchableOpacity>\n              </View>\n            )}\n            disableRightSwipe={true}\n            previewOpenDelay={3000}\n            friction={1000}\n            tension={40}\n            leftOpenValue={75}\n            stopLeftSwipe={75}\n            rightOpenValue={-75}\n          />\n        <View style={styles.bottomContainer}>\n            <View>\n                <Text >$ {totalPrice.toFixed( 2 )}</Text>\n            </View>\n            <View style={{flexDirection: 'row'}}>\n                <Button\n                  danger\n                  medium\n                  onPress={clearCart}\n                >\n                  <Text style={{ color: 'white' }}>Clear</Text>\n                </Button>\n                <Button\n                  primary\n                  medium\n                  style={{marginLeft: 10}}\n                  onPress={() => props.navigation.navigate('Checkout')}\n                >\n                <Text style={{ color: 'white' }}>Checkout</Text>\n                </Button>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View style={styles.center}>\n          <Text style={styles.description}>Looks like your cart is empty</Text>\n          <Text style={styles.description}>Add products to your cart to get started</Text>\n        </View>\n      )}\n      \n\n     \n    </View>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  center: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  button: {\n    backgroundColor: '#22d3ee',\n    alignSelf: 'flex-start',\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    borderRadius: 2\n  },\n  buttonText: {\n    fontWeight: 'bold',\n    color: 'white',\n    textTransform: 'uppercase',\n    fontSize: 14\n  },\n  bottomContainer: {\n    flexDirection: \"row\",\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    padding: 10,\n    width: \"100%\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    backgroundColor: \"white\",\n},\nhiddenContainer: {\n  flex: 1,\n  justifyContent: 'flex-end',\n  flexDirection: 'row'\n},\nhiddenButton: {\n  backgroundColor: 'red',\n  justifyContent: 'center',\n  alignItems: 'flex-end',\n  paddingRight: 25,\n  height: 81,\n  width: width / 1.2\n}\n});\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}