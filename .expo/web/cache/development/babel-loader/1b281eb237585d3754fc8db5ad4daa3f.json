{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport FormContainer from \"../../../components/FormContainer\";\nimport { Button, Input, Select } from \"native-base\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar countries = require(\"../../../../assets/data/countries.json\");\n\nvar Checkout = function Checkout(props) {\n  var _useState = useState({\n    orderItems: \"\",\n    address: \"\",\n    address2: \"\",\n    city: \"\",\n    zip: \"\",\n    country: \"\",\n    phone: \"\",\n    user: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var handleChange = function handleChange(name, text) {\n    setForm(function (prevState) {\n      return {\n        form: _objectSpread(_objectSpread({}, prevState.form), {}, _defineProperty({}, name, text))\n      };\n    });\n  };\n\n  var Checkout = function Checkout() {\n    props.navigation.navigate('Payment', {\n      order: form\n    });\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    viewIsInsideTabBar: true,\n    extraHeight: 200,\n    enableOnAndroid: true,\n    children: _jsxs(FormContainer, {\n      title: \"Shipping Address\",\n      children: [_jsx(Input, {\n        placeholder: \"phone\",\n        name: \"phone\",\n        keyboardType: \"numeric\",\n        w: \"90%\",\n        size: \"xl\",\n        variant: \"rounded\",\n        value: form.phone,\n        onChangeText: function onChangeText(text) {\n          return handleChange('phone', text);\n        },\n        mt: 5,\n        mb: 5\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 1\",\n        w: \"90%\",\n        size: \"xl\",\n        variant: \"rounded\",\n        name: \"ShippingAddress1\",\n        value: form.ShippingAddress1,\n        onChangeText: function onChangeText(text) {\n          return handleChange('ShippingAddress1', text);\n        },\n        mb: 5\n      }), _jsx(Input, {\n        placeholder: \"Shipping Address 2\",\n        w: \"90%\",\n        size: \"xl\",\n        variant: \"rounded\",\n        name: \"ShippingAddress2\",\n        value: form.ShippingAddress2,\n        onChangeText: function onChangeText(text) {\n          return handleChange('ShippingAddress2', text);\n        },\n        mb: 5\n      }), _jsx(Input, {\n        placeholder: \"city\",\n        w: \"90%\",\n        size: \"xl\",\n        variant: \"rounded\",\n        name: \"city\",\n        value: form.city,\n        onChangeText: function onChangeText(text) {\n          return handleChange('city', text);\n        },\n        mb: 5\n      }), _jsx(Input, {\n        placeholder: \"Zip Code\",\n        keyboardType: \"numeric\",\n        w: \"90%\",\n        size: \"xl\",\n        variant: \"rounded\",\n        name: \"zip\",\n        value: form.zip,\n        onChangeText: function onChangeText(text) {\n          return handleChange('zip', text);\n        },\n        mb: 5\n      }), _jsx(Select, {\n        placeholder: \"Select your country\",\n        w: \"90%\",\n        name: \"country\",\n        onValueChange: function onValueChange(itemValue) {\n          return handleChange(\"country\", itemValue);\n        },\n        value: form.country,\n        mb: 5,\n        children: countries.map(function (c) {\n          return _jsx(Select.Item, {\n            label: c.name,\n            value: c.name\n          }, c.code);\n        })\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return Checkout();\n        },\n        children: \"Confirm\"\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({});\nexport default Checkout;","map":{"version":3,"names":["React","useState","KeyboardAwareScrollView","FormContainer","Button","Input","Select","countries","require","Checkout","props","orderItems","address","address2","city","zip","country","phone","user","form","setForm","handleChange","name","text","prevState","navigation","navigate","order","ShippingAddress1","ShippingAddress2","itemValue","map","c","code","styles","StyleSheet","create"],"sources":["/Users/user/Documents/fullstack-mobile/client/app/screens/Cart/Checkout/Checkout.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport FormContainer from \"../../../components/FormContainer\";\nimport { Button, Input, Select } from \"native-base\";\n\n\nconst countries = require(\"../../../../assets/data/countries.json\");\nconst Checkout = (props) => {\n  const [form, setForm] = useState({\n    orderItems: \"\",\n    address: \"\",\n    address2: \"\",\n    city: \"\",\n    zip: \"\",\n    country: \"\",\n    phone: \"\",\n    user: \"\",\n  });\n\n  const handleChange = (name, text) => {\n    setForm((prevState) => ({\n      form: {\n        ...prevState.form,\n        [name]: text,\n      },\n    }));\n  };\n\n  const Checkout = () => {\n    props.navigation.navigate('Payment', {order: form})\n  }\n\n  return (\n    <KeyboardAwareScrollView\n      viewIsInsideTabBar={true}\n      extraHeight={200}\n      enableOnAndroid={true}\n    >\n      <FormContainer title={\"Shipping Address\"}>\n        <Input\n          placeholder=\"phone\"\n          name=\"phone\"\n          keyboardType={\"numeric\"}\n          w=\"90%\"\n          size=\"xl\"\n          variant=\"rounded\"\n          value={form.phone}\n          onChangeText={(text) => handleChange('phone', text)}\n          mt={5}\n          mb={5}\n        />\n        <Input\n          placeholder=\"Shipping Address 1\"\n          w=\"90%\"\n          size=\"xl\"\n          variant=\"rounded\"\n          name={\"ShippingAddress1\"}\n          value={form.ShippingAddress1}\n          onChangeText={(text) => handleChange('ShippingAddress1', text)}\n          mb={5}\n        />\n        <Input\n          placeholder=\"Shipping Address 2\"\n          w=\"90%\"\n          size=\"xl\"\n          variant=\"rounded\"\n          name={\"ShippingAddress2\"}\n          value={form.ShippingAddress2}\n          onChangeText={(text) => handleChange('ShippingAddress2', text)}\n            mb={5}\n        />\n        <Input\n          placeholder=\"city\"\n          w=\"90%\"\n          size=\"xl\"\n          variant=\"rounded\"\n          name={\"city\"}\n          value={form.city}\n          onChangeText={(text) => handleChange('city', text)}\n          mb={5}\n        />\n        <Input\n          placeholder=\"Zip Code\"\n          keyboardType={\"numeric\"}\n          w=\"90%\"\n          size=\"xl\"\n          variant=\"rounded\"\n          name={\"zip\"}\n          value={form.zip}\n          onChangeText={(text) => handleChange('zip', text)}\n          mb={5}\n        />\n        <Select\n          placeholder=\"Select your country\"\n          w=\"90%\"\n          name={\"country\"}\n          onValueChange={(itemValue) =>  handleChange(\"country\", itemValue)}\n          value={form.country}\n          mb={5}\n        >\n          {countries.map((c) => {\n            return <Select.Item key={c.code} label={c.name} value={c.name} />;\n          })}\n        </Select>\n        <Button onPress={() => Checkout()}>\n            Confirm \n        </Button>\n      </FormContainer>\n\n    </KeyboardAwareScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default Checkout;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}